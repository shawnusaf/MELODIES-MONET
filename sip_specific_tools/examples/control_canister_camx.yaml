# General Description:
# - Any key that is specific for a plot type will begin with `ts` for timeseries, `ty` for taylor.
# - Some keys/groups are optional.
# - For now, all plots except time series average over the analysis window.
# - Setting axis values
#   - If set_axis = True in data_proc section of each plot_grp,
#     the yaxis for the plot will be set based on the values
#     specified in the obs section for each variable.
#   - If set_axis is set to False, then defaults will be used.
#   - 'vmin_plot' and 'vmax_plot' are needed for
#     'timeseries', 'spatial_overlay', and 'boxplot'.
#   - 'vdiff_plot' is needed for 'spatial_bias' plots
#   - 'ty_scale' is needed for 'taylor' plots.
#   - 'nlevels' or the number of levels used in the contour plot can also optionally be provided for spatial_overlay plot.
#   - If set_axis = True and the proper limits are not provided in the obs section,
#     a warning will print, and the plot will be created using the default limits.
analysis:
  start_time: "2016-06-01" # UTC
  end_time: "2016-09-30" # UTC
  output_dir: ./  # relative to the program using this control file
  #   Currently, the directory must exist or plot saving will error and fail.
  debug: True
  save:
    paired:
      method: netcdf
      data: all
  read:
    paired:
      method: netcdf
      filenames: {'canister_camx': ['canister_camx.nc4']}

model:
  CAMX: # model label
    files: /glade/campaign/acom/acom-da/Denver2024-SIP/Denver_O3_2023/camx/outputs/runS20_2016/camxv72_cb6r5.20160[6-9]*.runS20.avrg.grd03.nc
    # files_vert: /glade/work/plichtig/NCAR_request_3D_file/camx.3d.12km.201912*.bin
    mod_type: "camx"
    surf_only: True  # specify that we have only one vertical level; WRF-Chem specific
    radius_of_influence: 12000 # meters
    variables:
    mapping: # of _model_ species name to _obs_ species name
      canister_PVCO: 
        BENZ: "Benzene"
        TOL: "Toluene"
    projection: ~
    # plot_kwargs: # optional
    #   color: "magenta"
    #   marker: "s"
    #   linestyle: "-"
    data_proc:
      average:
        start_hour: "obs"
        nhours: 3

obs:
  canister_PVCO: # obs label
    #use_canister: True
    filename: /glade/work/plichtig/melodies_monet/test_cases/examples_se/canisters/RawCDPHEPrecursorData-2016.xlsx
    obs_type: pt_sfc
    site_dict:
      # DECO:
      #   timezone: "America/Denver"
      #   site_id: 'DECO'
      #   site_coords: {'latitude': 39.751190, 'longitude': -104.987630}
      #   sheet_name: 'NMOC-DECO'
      #   skiprows: 9
      #   header: [0, 1]
      #   na_values: [ND]
      #   qualifier_name: [CAS, Anote]
      #   keep_qualifiers: ~
      PVCO:
        timezone: "America/Denver"
        site_id: 'PVCO'
        site_coords: {'latitude': 40.209325, 'longitude': -104.824050}
        sheet_name: 'NMOC-PVCO'
        skiprows: 9
        header: [0, 1]
        na_values: ND
        qualifier_name: [CAS, Anote]
    variables: # optional
      Benzene:
        unit_scale: 6
        # ^ optional; Scaling factor
        unit_scale_method: "/"
        # ^ optional; Multiply = '*' , Add = '+', subtract = '-', divide = '/'
        nan_value: -1.0
        # ^ optional; When loading data, set this value to NaN
        ylabel_plot: "Benzene"
        # optional; set ylabel in order to include units and/or other info
        vmin_plot: -0.1
        # ^ optional; Min for y-axis during plotting.
        #   To apply to a plot, change restrict_yaxis = True.
        vmax_plot: 1
        # ^ optional; Max for y-axis during plotting.
        #   To apply to a plot, change restrict_yaxis = True.
        vdiff_plot: 1.0
        # ^ optional; +/- range to use in bias plots.
        #   To apply to a plot, change restrict_yaxis = True.
        nlevels_plot: 21
      Toluene:
        unit_scale: 7
        # ^ optional; Scaling factor
        unit_scale_method: "/"
        # ^ optional; Multiply = '*' , Add = '+', subtract = '-', divide = '/'
        nan_value: -1.0
        # ^ optional; When loading data, set this value to NaN
        ylabel_plot: "Toluene"
        # optional; set ylabel in order to include units and/or other info
        vmin_plot: -0.1
        # ^ optional; Min for y-axis during plotting.
        #   To apply to a plot, change restrict_yaxis = True.
        vmax_plot: 3
        # ^ optional; Max for y-axis during plotting.
        #   To apply to a plot, change restrict_yaxis = True.
        vdiff_plot: 1.0
        # ^ optional; +/- range to use in bias plots.
        #   To apply to a plot, change restrict_yaxis = True.
        nlevels_plot: 21



plots:
  plot_grp1:
    type: "timeseries" # plot type
    fig_kwargs: # optional; to define figure options
      figsize: [12, 6] # figure size (width, height) in inches
    default_plot_kwargs:
      # ^ optional; Define defaults for all plots.
      #   Important: Model kwargs overwrite these.
      linewidth: 2.0
      markersize: 10.
    text_kwargs: # optional
      fontsize: 24.
    domain_type: ["all"] # , "state_name", "state_name", "state_name", "epa_region"]
    # ^ List of domain types: 'all' or any domain in obs file.
    #   (e.g., canister: epa_region, state_name, siteid, etc.)
    domain_name: ["PVCO"] # , "PA", "WV", "VA", "R3"]
    # ^ List of domain names. If domain_type = all,
    #   the domain name is used in the plot title.
    data: ["canister_PVCO_CAMX"] #, "canister_RACM_ESRL_VCP"]
    # ^ make this a list of pairs in obs_model
    #   where the obs is the obs label and model is the model_label
    data_proc: # optional??
      rem_obs_nan: True
      # ^ True: Remove all points where model or obs variable is NaN.
      #   False: Remove only points where model variable is NaN.
      ts_select_time: "time_local"  # `ts_` indicates this is time series plot-specific
      # ^ Time used for avg and plotting
      #   Options: 'time' for UTC or 'time_local'
      # ts_avg_window: "h"
      # ^ Options: None for no averaging, pandas resample rule (e.g., 'h', 'D')
      set_axis: True
      # ^ If true, add `vmin_plot` and `vmax_plot` for each variable in obs.

#     type: "taylor"
#     fig_kwargs:
#       figsize: [8, 8]
#     default_plot_kwargs:
#       linewidth: 2.0
#       markersize: 10.
#     text_kwargs:
#       fontsize: 16.
#     domain_type: ["all"]
#     domain_name: ["CONUS"]
#     data: ["canister_CAMX"] #, "canister_RACM_ESRL_VCP"]
#     data_proc:
#       rem_obs_nan: True
#       set_axis: True

  # plot_grp3:
  #   type: "spatial_bias"
  #   fig_kwargs: # optional; For all spatial plots, specify map_kwargs here too.
  #   fig_kwargs:
  #     states: True
  #     counties: True
  #     figsize: [10, 5]
  #     extent: [-105.5, -104.5, 39.5, 40.5]
  #   text_kwargs:
  #     fontsize: 16.
  #   domain_type: ["all"] # , "state_name", "state_name", "state_name", "epa_region"]
  #   domain_name: ["Colorado"] #, "PA", "WV", "VA", "R3"]
  #   data: ["canister_CAMX"] # , "canister_RACM_ESRL_VCP"]
  #   data_proc:
  #     rem_obs_nan: True
  #     set_axis: True

  # plot_grp4:
  #   type: "spatial_overlay"
  #   fig_kwargs:
  #     states: True
  #     counties: True
  #     figsize: [10, 5]
  #     extent: [-105.5, -104.5, 39.5, 40.5]
  #   text_kwargs:
  #     fontsize: 16.
  #   domain_type: ["all"] #, "state_name", "state_name", "state_name", "epa_region"]
  #   domain_name: ["Colorado"] #, "PA", "WV", "VA", "R3"]
  #   data: ["canister_CAMX"] #, "canister_RACM_ESRL_VCP"]
  #   data_proc:
  #     rem_obs_nan: True
  #     set_axis: True

  # plot_grp5:
  #   type: "boxplot"
  #   fig_kwargs:
  #     figsize: [8, 6]
  #   text_kwargs:
  #     fontsize: 20.
  #   domain_type: ["all"]
  #   domain_name: ["Colorado"]
  #   data: ["canister_CAMX"] #, "canister_RACM_ESRL_VCP"]
  #   data_proc:
  #     rem_obs_nan: True
  #     set_axis: False

#   # plot_grp6:
#   #   type: "scorecard"
#   #   fig_kwargs:
#   #     figsize: [15, 10]
#   #   text_kwargs:
#   #     fontsize: 20.
#   #   domain_type: ["all"]
#   #   domain_name: ["CONUS"]
#   #   region_name: ['epa_region']
#   #   region_list: ['R1','R2','R3','R4','R5','R6','R7','R8','R9','R10']
#   #   urban_rural_name: ['msa_name']
#   #   urban_rural_differentiate_value: ''
#   #   better_or_worse_method: 'NME'    #support 'RMSE', 'IOA' ,' NMB', 'NME'
#   #   model_name_list: ['canister','RACM_ESRL','RACM_ESRL_VCP']
#   #   data: ["canister_RACM_ESRL", "canister_RACM_ESRL_VCP"]
#   #   data_proc:
#   #     rem_obs_nan: True
#   #     set_axis: False

#   plot_grp7:
#     type: "multi_boxplot"
#     fig_kwargs:
#       figsize: [10, 8]
#     text_kwargs:
#       fontsize: 20.
#     domain_type: ["all"]
#     domain_name: ["CONUS"]
#     region_name: ['state_name']
#     region_list: ['PA','WV','VA'] 
#     model_name_list: ['canister','CAMx']
#     data: ["canister_CAMX"] #, "canister_RACM_ESRL_VCP"]
#     data_proc:
#       rem_obs_nan: True
#       set_axis: False

#   # plot_grp8:
#   #   type: "csi"
#   #   fig_kwargs:
#   #     figsize: [10, 8]
#   #   text_kwargs:
#   #     fontsize: 20.
#   #   domain_type: ["all",'epa_region']
#   #   domain_name: ["CONUS",'R1']
#   #   threshold_list: [10,20,30,40,50,60,70,80,90,100]
#   #   score_name: 'Critical Success Index'  #can be used 'Critical Success Index' 'False Alarm Rate' 'Hit Rate'
#   #   model_name_list: ['RACM_ESRL','RACM_ESRL_VCP']
#   #   data: ["canister_RACM_ESRL", "canister_RACM_ESRL_VCP"]
#   #   data_proc:
#   #     rem_obs_nan: True
#   #     set_axis: False
      
# stats:
#   # Stats require positive numbers, so if you want to calculate temperature use Kelvin!
#   # Wind direction has special calculations for canister if obs name is 'WD'
#   stat_list: ["MB", "MdnB", "R2", "RMSE"]
#   # ^ List stats to calculate. Dictionary of definitions included
#   #   in submodule `plots/proc_stats`. Only stats listed below are currently working.
#   #   Full calc list:
#   #   ['STDO', 'STDP', 'MdnNB','MdnNE','NMdnGE',
#   #    'NO', 'NOP', 'NP', 'MO', 'MP', 'MdnO', 'MdnP',
#   #    'RM', 'RMdn', 'MB', 'MdnB', 'NMB', 'NMdnB', 'FB',
#   #    'ME','MdnE','NME', 'NMdnE', 'FE', 'R2', 'RMSE','d1',
#   #    'E1', 'IOA', 'AC']
#   round_output: 2 # optional; defaults to rounding to 3rd decimal place
#   output_table: False
#   # ^ Always outputs a .txt file.
#   #   Optional to also output a Matplotlib figure table (image).
#   output_table_kwargs: # optional
#     figsize: [7, 3]
#     fontsize: 12.
#     xscale: 1.4
#     yscale: 1.4
#     edges: "horizontal"
#   domain_type: ["all"]
#   domain_name: ["CONUS"]
#   data: ["canister_RACM_ESRL", "canister_RACM_ESRL_VCP"]
